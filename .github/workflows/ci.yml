name: CI

on:
  merge_group:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_TOOLCHAIN: nightly

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-ci-${{ hashFiles('**/Cargo.toml') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: CI job
        run: cargo test

  miri:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-miri-${{ hashFiles('**/Cargo.toml') }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
          components: miri
      - name: CI job
        # To run the tests one item at a time for troubleshooting, use
        # cargo --quiet test --lib -- --list | sed 's/: test$//' | MIRIFLAGS="-Zmiri-disable-isolation -Zmiri-permissive-provenance -Zmiri-disable-weak-memory-emulation" xargs -n1 cargo miri test -p bevy_ecs --lib -- --exact
        run: cargo miri test

  markdownlint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: always()
    steps:
      - uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: Run Markdown Lint
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          MULTI_STATUS: false
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_MARKDOWN: true
          DEFAULT_BRANCH: main
  msrv:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: ci
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-msrv-${{ hashFiles('**/Cargo.toml') }}
      - name: get MSRV
        run: |
          msrv=`cargo metadata --no-deps --format-version 1 | jq --raw-output '.packages[] | select(.name=="bevy") | .rust_version'`
          echo "MSRV=$msrv" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.MSRV }}
      - name: Run cargo check
        id: check
        run: cargo check
      - name: Save PR number
        if: ${{ failure() && github.event_name == 'pull_request' && steps.check.conclusion == 'failure' }}
        run: |
          mkdir -p ./msrv
          echo ${{ github.event.number }} > ./msrv/NR
      - uses: actions/upload-artifact@v2
        if: ${{ failure() && github.event_name == 'pull_request' && steps.check.conclusion == 'failure' }}
        with:
          name: msrv
          path: msrv/
